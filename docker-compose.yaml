services:
  # ================= stack =================

  dashboard:
    container_name: stack-dashboard
    build:
      context: .
      dockerfile: ./deploy/docker/dashboard/Dockerfile
    env_file:
      - apps/dashboard/.env.docker
    ports:
      - 8101:8101
    depends_on:
      postgres:
        condition: service_healthy
    extra_hosts:
      - "host.docker.internal:host-gateway"

  backend:
    container_name: stack-backend
    build:
      context: .
      dockerfile: ./deploy/docker/backend/Dockerfile
    env_file:
      - apps/dashboard/.env.docker # used for ensuring matching shared API keys between dashboard and backend seed script
      - apps/backend/.env.docker
    ports:
      - 8102:8102
    depends_on:
      postgres:
        condition: service_healthy
      inbucket:
        condition: service_started
      svix-server:
        condition: service_started
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # ================= PostgreSQL =================

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: stack
      POSTGRES_PASSWORD: stack123
      POSTGRES_DB: stack
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U stack"]
      interval: 1s
      timeout: 2s
      retries: 20

  # ================= Inbucket =================

  inbucket:
    image: inbucket/inbucket:latest
    ports:
      - 8105:9000
    volumes:
      - inbucket-data:/data

  # ================= OpenTelemetry & Jaeger =================

  jaeger:
    image: jaegertracing/all-in-one:latest
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    restart: always

  # ================= svix =================

  svix-db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: svix
    volumes:
      - svix-postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 2s
      retries: 10

  svix-redis:
    image: docker.io/redis:7-alpine
    command: --save 60 500 --appendonly yes --appendfsync everysec
    volumes:
      - svix-redis-data:/data

  svix-server:
    image: svix/svix-server
    environment:
      WAIT_FOR: 'true'
      SVIX_DB_DSN: postgres://postgres:password@svix-db:5432/svix
      SVIX_REDIS_DSN: redis://svix-redis:6379
      SVIX_QUEUE_TYPE: redis
      SVIX_CACHE_TYPE: redis
      SVIX_JWT_SECRET: secret
      SVIX_LOG_LEVEL: trace
    ports:
      - 8113:8071
    depends_on:
    - svix-redis
    - svix-db

# ================= volumes =================

volumes:
  postgres-data:
    name: stack-postgres
  inbucket-data:
    name: stack-inbucket
  svix-redis-data:
    name: svix-redis
  svix-postgres-data:
    name: svix-postgres
